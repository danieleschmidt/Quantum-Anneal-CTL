# Quantum HVAC Control - Production Configuration

# Application Settings
app:
  name: "Quantum HVAC Control"
  version: "0.1.0"
  environment: "production"
  debug: false
  testing: false
  cors_origins:
    - "https://quantum-hvac.example.com"
    - "https://dashboard.quantum-hvac.example.com"

# Server Configuration
server:
  host: "0.0.0.0"
  port: 8000
  workers: 4
  max_connections: 1000
  keep_alive: 2
  timeout: 120
  
# Database Configuration  
database:
  url: "postgresql+asyncpg://quantum:${POSTGRES_PASSWORD}@postgres:5432/quantum_hvac"
  echo_sql: false
  pool_size: 20
  max_overflow: 30
  pool_timeout: 30
  pool_recycle: 3600
  pool_pre_ping: true
  
  # Migration settings
  migrations:
    auto_upgrade: true
    backup_before_upgrade: true
    
# Redis Configuration
redis:
  url: "redis://redis:6379/0"
  password: "${REDIS_PASSWORD}"
  encoding: "utf-8"
  decode_responses: true
  max_connections: 50
  retry_on_timeout: true
  
  # Cache TTL settings (seconds)
  ttl:
    default: 300
    building_state: 60
    weather_data: 900
    optimization_results: 1800
    device_status: 30

# D-Wave Quantum Configuration
dwave:
  api_token: "${DWAVE_API_TOKEN}"
  endpoint: "https://cloud.dwavesys.com/sapi"
  default_solver: "auto"
  solvers:
    hybrid:
      time_limit: 30
      seed: null
    qpu:
      num_reads: 1000
      annealing_time: 20
      chain_strength: null
      auto_scale: true
  
  # Fallback settings
  fallback:
    enabled: true
    timeout: 5.0
    max_problem_size: 1000

# Security Configuration
security:
  secret_key: "${SECRET_KEY}"
  algorithm: "HS256"
  access_token_expire_minutes: 30
  refresh_token_expire_days: 7
  password_min_length: 12
  
  # Rate limiting
  rate_limit:
    enabled: true
    requests_per_minute: 100
    burst_size: 20
  
  # CORS settings
  cors:
    allow_credentials: true
    allow_methods: ["GET", "POST", "PUT", "DELETE", "OPTIONS"]
    allow_headers: ["*"]
    max_age: 86400

# Logging Configuration
logging:
  version: 1
  disable_existing_loggers: false
  
  formatters:
    default:
      format: "%(asctime)s - %(name)s - %(levelname)s - %(message)s"
      datefmt: "%Y-%m-%d %H:%M:%S"
    json:
      class: "pythonjsonlogger.jsonlogger.JsonFormatter"
      format: "%(asctime)s %(name)s %(levelname)s %(message)s"
      
  handlers:
    console:
      class: "logging.StreamHandler"
      level: INFO
      formatter: default
      stream: ext://sys.stdout
      
    file:
      class: "logging.handlers.RotatingFileHandler"
      level: INFO
      formatter: json
      filename: "/app/logs/quantum_hvac.log"
      maxBytes: 10485760  # 10MB
      backupCount: 5
      
    error_file:
      class: "logging.handlers.RotatingFileHandler" 
      level: ERROR
      formatter: json
      filename: "/app/logs/quantum_hvac_errors.log"
      maxBytes: 10485760  # 10MB
      backupCount: 10
      
  loggers:
    quantum_ctl:
      level: INFO
      handlers: [console, file, error_file]
      propagate: false
      
    uvicorn:
      level: INFO
      handlers: [console]
      
    sqlalchemy:
      level: WARNING
      handlers: [file]

# Monitoring Configuration
monitoring:
  enabled: true
  
  # Prometheus metrics
  metrics:
    enabled: true
    port: 9090
    endpoint: "/metrics"
    
  # Health checks
  health:
    endpoint: "/health"
    detailed_endpoint: "/health/detailed"
    startup_timeout: 60
    
  # Performance tracking
  performance:
    request_tracking: true
    slow_query_threshold: 1.0
    memory_monitoring: true

# BMS Integration Settings
bms:
  connection_timeout: 10.0
  read_timeout: 5.0
  retry_attempts: 3
  retry_delay: 2.0
  
  # Protocol-specific settings
  bacnet:
    device_discovery_timeout: 30.0
    max_devices: 100
    cache_timeout: 300
    
  modbus:
    keepalive_interval: 30
    register_cache_timeout: 1.0
    bulk_read_optimization: true
    
  mqtt:
    keepalive: 60
    qos: 1
    clean_session: false
    
  http:
    connect_timeout: 5.0
    request_timeout: 10.0
    max_retries: 3

# Control System Settings
control:
  loop_interval: 300  # 5 minutes
  safety_timeout: 30
  emergency_mode_threshold: 5.0
  
  # Optimization settings
  optimization:
    horizon_hours: 24
    time_step_minutes: 15
    max_iterations: 1000
    convergence_tolerance: 1e-4
    
  # Model parameters
  model:
    thermal_time_constant: 3600  # 1 hour
    occupancy_detection_threshold: 0.1
    comfort_temperature_range: [20, 26]  # Celsius
    humidity_range: [30, 70]  # Percent

# Weather Integration
weather:
  update_interval: 900  # 15 minutes
  forecast_horizon_hours: 48
  data_retention_days: 30
  
  # API settings (configure based on provider)
  api:
    timeout: 10.0
    retry_attempts: 3
    cache_duration: 900

# Multi-tenant Configuration
tenants:
  max_tenants: 100
  default_resource_limits:
    buildings: 10
    zones_per_building: 50
    api_requests_per_hour: 1000
    storage_mb: 1000
    
  # Billing settings
  billing:
    enabled: true
    currency: "USD"
    billing_cycle_days: 30

# Backup Configuration
backup:
  enabled: true
  schedule: "0 2 * * *"  # Daily at 2 AM
  retention_days: 30
  compress: true
  
  # Storage backends
  storage:
    s3:
      enabled: true
      bucket: "${BACKUP_S3_BUCKET}"
      prefix: "backups/"
      encryption: true
    
    local:
      enabled: true
      path: "/app/data/backups"
      max_size_gb: 50

# Feature Flags
features:
  quantum_optimization: true
  advanced_analytics: true
  ml_forecasting: true
  peer_to_peer_trading: true
  multi_building_coordination: true
  real_time_dashboard: true
  mobile_notifications: false  # Not implemented yet

# Development & Testing (disabled in production)
development:
  auto_reload: false
  debug_toolbar: false
  fake_quantum_solver: false
  mock_bms_data: false
  
# Resource Limits
limits:
  max_request_size: 10485760  # 10MB
  max_file_uploads: 5
  max_upload_size: 52428800  # 50MB
  request_timeout: 300
  
  # Memory limits
  memory:
    max_building_states: 10000
    max_optimization_history: 1000
    max_weather_records: 100000