version: '3.8'

# Production Docker Compose for Quantum-Anneal-CTL
# High-availability, multi-service deployment with monitoring

networks:
  quantum-network:
    driver: bridge

volumes:
  postgres_data:
  redis_data:
  prometheus_data:
  grafana_data:
  quantum_logs:

services:
  # Core Quantum Control API
  quantum-api:
    build:
      context: .
      dockerfile: Dockerfile.production
    container_name: quantum-api
    restart: unless-stopped
    ports:
      - "8080:8080"
      - "9090:9090"
    environment:
      - QUANTUM_CTL_ENV=production
      - DATABASE_URL=postgresql://quantum_user:${POSTGRES_PASSWORD}@postgres:5432/quantum_ctl
      - REDIS_URL=redis://:${REDIS_PASSWORD}@redis:6379/0
      - DWAVE_API_TOKEN=${DWAVE_API_TOKEN}
      - JWT_SECRET_KEY=${JWT_SECRET_KEY}
      - SECURITY_LEVEL=high
    volumes:
      - quantum_logs:/app/logs
    depends_on:
      - postgres
      - redis
    networks:
      - quantum-network
    healthcheck:
      test: ["CMD", "wget", "-q", "--spider", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  postgres:
    image: postgres:15-alpine
    container_name: quantum-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: quantum_ctl
      POSTGRES_USER: quantum_user
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - quantum-network

  redis:
    image: redis:7-alpine
    container_name: quantum-redis
    restart: unless-stopped
    command: redis-server --requirepass ${REDIS_PASSWORD}
    volumes:
      - redis_data:/data
    networks:
      - quantum-network

  prometheus:
    image: prom/prometheus:latest
    container_name: quantum-prometheus
    restart: unless-stopped
    ports:
      - "9091:9090"
    volumes:
      - prometheus_data:/prometheus
    networks:
      - quantum-network

  grafana:
    image: grafana/grafana:latest
    container_name: quantum-grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=${GRAFANA_ADMIN_USER:-admin}
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASSWORD:-admin123}
    volumes:
      - grafana_data:/var/lib/grafana
    networks:
      - quantum-network